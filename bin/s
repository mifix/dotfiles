#!/bin/bash
# vi: set ft=bash

 #     #
 ##   ##  #  #    #  #          ####   #    #  ######  ######  ######  #   #
 # # # #  #  ##   #  #         #       ##   #  #       #           #    # #
 #  #  #  #  # #  #  #  #####   ####   # #  #  #####   #####      #      #
 #     #  #  #  # #  #              #  #  # #  #       #         #       #
 #     #  #  #   ##  #         #    #  #   ##  #       #        #        #
 #     #  #  #    #  #          ####   #    #  ######  ######  ######    #

SNEEZY_IMAGE="sneezy-bionic"
IMAGE="images:ubuntu/18.04"


# To map user ids from host to container, run this command once:
# echo "root:$UID:1" | sudo tee -a /etc/subuid
# echo "root:$GID:1" | sudo tee -a /etc/subgid

command=$1
container=$2
bundles="${@:3}"

workspace_base="$HOME/Projects/cnt"


if [ -z $command ]; then
  echo "ERROR: command is missing"
  echo "Usage: s <command> <containter_name>"
  echo
  echo "Commands:"
  echo "  c ... create container"
  echo "  u ... start container (up)"
  echo "  h ... stop container (halt)"
  echo "  s ... enter container (shell)"
  echo "  d ... delete container"
  echo "  p ... create and switch to a lxd project"
  echo "  b ... go to 'base' directory (Workspace)"
  exit
fi

if [ -z $container ]; then
  echo "ERROR: container name is missing"
  echo "Usage: s <command> <containter_name>"
  exit
fi


# get current lxc project name
# use project name as directory namespace
# e.g. container foo in project bar will be in
# $workspace_base/bar/foo
project_current_project() {
  lxc project  list | grep current | cut -d ' ' -f 2
}

project_exists() {
  lxc project list | grep -c $1
}


get_workspace_dir() {
  if [[ -z $1 ]]; then echo "Workspace base is missing."; exit 1;fi
  base="$1"
  if [[ -z $2 ]]; then echo "Project is missing."; exit 1;fi
  project="$2"
  if [[ -z $3 ]]; then echo "Container is missing."; exit 1;fi
  container="$3"

  if [[ $project = "default" ]]; then
    project=""
  fi

  echo "${base}/${project}/${container}" | sed -e 's/\/\//\//'
}

project=$(project_current_project)
if [[ $project != "default" ]]; then
  echo "Current Project: $project"
fi

workspace=$(get_workspace_dir ${workspace_base} ${project} ${container})


case $command in
  c)
    # make sure no project with the same name exists
    pe=$(project_exists $container)
    if [[ $pe = 1 ]]; then
      echo "A project with the same name already exists!"
      exit 1
    fi

    if [ $(lsb_release -id | grep -c Arch) ]; then
      OPTION=""
    else
      OPTIONS="-c security.privileged=true"
      echo "Arch Linux detected. Setting lxc options to: $OPTIONS"
    fi

    if [ $(lxc image list | grep -c $SNEEZY_IMAGE) -eq 1 ]; then
      IMAGE=${SNEEZY_IMAGE}
      echo "Found sneezy base image. Using ${IMAGE}."
    else
      echo "Didn't find sneezy base image. Using ${IMAGE}."
    fi

    mkdir -p $workspace 2>/dev/null
    lxc init "$IMAGE" $container $OPTIONS
    lxc config set $container raw.idmap "both `id -u` 1000"
    lxc config device add $container homedir disk source=$workspace path=/home/ubuntu
    lxc config device add $container dotfiles disk source=/home/chris/.dotfiles path=/home/ubuntu/.dotfiles
    # lxc config device add $container Workspace disk source=$workspace path=/opt/Workspace
    lxc start $container

    # add ubuntu user to sudoers
    lxc exec "$container" -- bash -c 'echo "ubuntu ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ubuntu'
    lxc exec "$container" -- bash -c 'chmod 440 /etc/sudoers.d/ubuntu'
    lxc exec $container  -- su -l ubuntu bash -c "touch ~/.is_sneezy"
    # lxc exec $container  -- su -l ubuntu bash -c "ln -s /opt/Workspace"

    if [ -d ~/.dotfiles ]; then
      echo "Dotfiles detected. Running 'base' install"
    #   echo "Syncing dotfiles."
    #   cd $workspace
    #   rsync -aqvz ~/.dotfiles .
      lxc exec $container  -- sudo --login -u ubuntu bash -c "cd ~/.dotfiles; ./init base ${bundles}"
    fi

    ;;
  u)
    lxc start $container
    ;;
  h)
    lxc stop $container
    ;;
  s)
    lxc exec $container  -- sudo --login -u ubuntu
    # lxc exec $container  -- su -l ubuntu
    # reset theme
    zsh $HOME/.base16_theme
    ;;
  p)
    project=$container
    exists=$(project_exists $project)
    if [[ $exists = 0 ]]; then
      # create lxd projects and use features from default
      # https://github.com/lxc/lxd/blob/master/doc/projects.md
      echo "Creating project: $project"
      lxc project create $project
      lxc project set $project features.images false
      lxc project set $project features.profiles false
    fi
    echo "Switching to project: $project"
    lxc project switch $project
    ;;
  d)
    lxc stop $container
    lxc delete $container
    ;;
  b)
    echo "Not yet implemented."
    ;;
esac
